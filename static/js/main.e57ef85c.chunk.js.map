{"version":3,"sources":["image/starIcon.svg","image/circle.svg","image/search.svg","image/TMDBLogo.svg","image/githubIcon.svg","image/avatar.png","components/Navbar.js","components/HomeBanner.js","components/Movies.js","components/Footer.js","components/Spinner.js","actions/types.js","actions/getMoviesUpcoming.js","actions/getMoviesLatest.js","actions/getMoviesNowPlaying.js","actions/getMoviesPopular.js","actions/getConfig.js","components/Home.js","components/TrailersList.js","components/CastList.js","components/Reviews.js","actions/getMovieDetails.js","actions/getMovieTrailers.js","actions/getMovieCredits.js","actions/getMovieReviews.js","components/MovieDetails.js","actions/searchItems.js","components/SearchResults.js","components/App.js","reducers/getMoviesUpcoming.js","reducers/getMoviesLatest.js","reducers/getMoviesNowPlaying.js","reducers/getMovieDetails.js","reducers/getMoviesPopular.js","reducers/getMovieTrailers.js","reducers/getMovieCredits.js","reducers/getMovieReviews.js","reducers/getConfig.js","reducers/searchItems.js","reducers/index.js","store.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","state","searchQuery","page","onChange","e","_this","setState","target","value","react_default","a","createElement","className","href","src","FORMOVIELogo","alt","this","type","placeholder","react_router_dom","to","concat","loupe","Component","HomeBanner","config","props","console","log","items","lib_default","dots","arrows","infinite","slidesToShow","slidesToScroll","initialSlide","autoplay","speed","autoplaySpeed","map","item","i","id","key","style","background","images","secure_base_url","backdrop_sizes","backdrop_path","title","starIcon","vote_average","vote_count","Movies","header","responsive","breakpoint","settings","poster_sizes","poster_path","Footer","rel","githubIcon","TMDBLogo","Spinner","class","passMoviesUpcoming","payload","getMoviesUpcoming","url","dispatch","fetch","then","res","json","data","catch","error","passMoviesLatest","getMoviesLatest","passMoviesNowPlaying","getMoviesNowPlaying","passMoviesPopular","getMoviesPopular","passConfig","getConfig","Home","process","moviesNowPlaying","results","length","components_HomeBanner","Movies_Movies","moviesUpcoming","moviesLatest","connect","moviesPopular","trailer","people","person","profile_path","profile_sizes","avatar","name","character","Reviews","textCut","str","arguments","undefined","strArray","split","filter","b","join","_this2","reviews","review","author","content","passMovieDetails","getMovieDetails","passMovieTrailers","getMovieTrailers","passMovieCredits","getMovieCredits","passMovieReviews","getMovieReviews","MovieDetails","window","scrollTo","match","params","movieTrailers","movieDetails","backgroundSize","genres","production_countries","overview","TrailersList_Movies","CastList_Movies","movieCredits","cast","movieReviews","Reviews_Reviews","passItems","searchItems","SearchResults","changePage","pageTransition","prevProps","searchItemsResults","media_type","onClick","App","basename","Navbar_Navbar","react_router","path","exact","component","initialState","action","Object","objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","es","components_App","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e57ef85c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/starIcon.d5b5a740.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle.1842bfa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.8e4f0786.svg\";","module.exports = __webpack_public_path__ + \"static/media/TMDBLogo.67317b5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/githubIcon.22fdaa0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.0b0a90e9.png\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FORMOVIELogo from \"../image/circle.svg\";\r\nimport loupe from \"../image/search.svg\";\r\n\r\nexport default class Navbar extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    page: 1\r\n  };\r\n\r\n  //set search state\r\n  onChange = e => {\r\n    this.setState({\r\n      searchQuery: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='navbar'>\r\n        <a className='navbar-header' href='/formovie/#/'>\r\n          <img className='navbar-header-logo' src={FORMOVIELogo} alt='' />\r\n          <h1 className='navbar-header-title'>ForMovie</h1>\r\n        </a>\r\n        <form className='navbar-search'>\r\n          <input\r\n            onChange={this.onChange}\r\n            type='text'\r\n            placeholder='Find movies...'\r\n            className='navbar-search-input'\r\n          />\r\n          <Link\r\n            className='navbar-search-link'\r\n            to={`/search/${this.state.searchQuery}`}\r\n          >\r\n            <button type='submit' className='navbar-search-button'>\r\n              <img\r\n                className='navbar-search-button-icon'\r\n                src={loupe}\r\n                alt='Search'\r\n              />\r\n            </button>\r\n          </Link>\r\n        </form>\r\n        <div className='navbar-menu' />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { Link } from \"react-router-dom\";\r\nimport starIcon from \"../image/starIcon.svg\";\r\n\r\nclass HomeBanner extends Component {\r\n  render() {\r\n    const config = this.props.config;\r\n    const sliderSettings = {\r\n      dots: false,\r\n      arrows: false,\r\n      infinite: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      initialSlide: 1,\r\n      autoplay: true,\r\n      speed: 2000,\r\n      autoplaySpeed: 7000\r\n    };\r\n    console.log(this.props.items);\r\n    return (\r\n      <div className='slide-wrapper'>\r\n        <Slider {...sliderSettings}>\r\n          {this.props.items.map((item, i) => {\r\n            if (i < 5) {\r\n              return (\r\n                <Link to={`/movie-details/${item.id}`} key={item.id}>\r\n                  <div\r\n                    id={item.id}\r\n                    to='/'\r\n                    className='slide-background'\r\n                    style={{\r\n                      background: `linear-gradient(\r\n                        rgba(0, 0, 0, 0.5),\r\n                        rgba(0, 0, 0, 0.5),\r\n                        rgba(0, 0, 0, 1)\r\n                      ), url(${\r\n                        config.images ? config.images.secure_base_url : \"\"\r\n                      }${config.images ? config.images.backdrop_sizes[2] : \"\"}${\r\n                        item.backdrop_path\r\n                      })`\r\n                    }}\r\n                  >\r\n                    <div className='slide-description'>\r\n                      <h3 className='slide-description-header'>\r\n                        Popular movies\r\n                      </h3>\r\n                      <h2 className='slide-description-title'>{item.title}</h2>\r\n\r\n                      <div className='slide-description-score'>\r\n                        <img\r\n                          className='slide-description-score-icon'\r\n                          src={starIcon}\r\n                          alt='Rating:'\r\n                        />\r\n                        <div className='slide-description-score-numbers'>\r\n                          <h3 className='slide-description-score-number'>\r\n                            {item.vote_average}\r\n                          </h3>\r\n                          <h4 className='slide-description-score-votes'>\r\n                            {item.vote_count} VOTES\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeBanner;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default class Movies extends Component {\r\n  render() {\r\n    const config = this.props.config;\r\n    const sliderSettings = {\r\n      infinite: true,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      speed: 500,\r\n      autoplaySpeed: 5000,\r\n      responsive: [\r\n        {\r\n          breakpoint: 500,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 1400,\r\n          settings: {\r\n            slidesToShow: 4\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <div className='carousel'>\r\n        <div className='carousel-heading'>\r\n          <h2 className='carousel-heading-title'>{this.props.header}</h2>\r\n          <div className='carousel-heading-line' />\r\n        </div>\r\n\r\n        <Slider {...sliderSettings}>\r\n          {this.props.items.map((item, i) => {\r\n            if (i > 1 && i < 20) {\r\n              return (\r\n                <Link\r\n                  to={`/movie-details/${item.id}`}\r\n                  className='link'\r\n                  key={item.id}\r\n                >\r\n                  <div className='carousel-item'>\r\n                    <img\r\n                      to='/'\r\n                      className='carousel-poster'\r\n                      src={`${\r\n                        config.images ? config.images.secure_base_url : \"\"\r\n                      }${config.images ? config.images.poster_sizes[1] : \"\"}${\r\n                        item.poster_path\r\n                      }`}\r\n                      alt={item.title}\r\n                    />\r\n\r\n                    <h4>{item.title}</h4>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n        </Slider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport TMDBLogo from \"../image/TMDBLogo.svg\";\r\nimport githubIcon from \"../image/githubIcon.svg\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      <div className=\"footer-info\">\r\n        <h2 className=\"footer-info-item\">FOR MOVIE</h2>\r\n        <h3 className=\"footer-info-item\">Adam Czakon &copy;2019</h3>\r\n        <a\r\n          href=\"https://github.com/adamczakon\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img className=\"footer-info-icon\" src={githubIcon} alt=\"github\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"footer-credits\">\r\n        <a\r\n          href=\"https://www.themoviedb.org/documentation/api\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"footer-credits-link\"\r\n        >\r\n          <img\r\n            className=\"footer-credits-logo\"\r\n            src={TMDBLogo}\r\n            alt=\"Powered by TMDB\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Spinner() {\r\n  return <div class=\"loader\">Loading...</div>;\r\n}\r\n","export const GET_MOVIES_UPCOMING = \"GET_MOVIES_UPCOMING\";\r\nexport const GET_MOVIES_LATEST = \"GET_MOVIES_LATEST\";\r\nexport const GET_MOVIES_NOW_PLAYING = \"GET_MOVIES_NOW_PLAYING\";\r\nexport const GET_MOVIES_POPULAR = \"GET_MOVIES_POPULAR\";\r\n\r\nexport const GET_MOVIE_DETAILS = \"GET_MOVIES_DETAILS\";\r\nexport const GET_MOVIE_TRAILERS = \"GET_MOVIES_TRAILERS\";\r\nexport const GET_MOVIE_CREDITS = \"GET_MOVIES_CREDITS\";\r\nexport const GET_MOVIE_REVIEWS = \"GET_MOVIES_REVIEWS\";\r\n\r\nexport const GET_CONFIG = \"GET_CONFIG\";\r\nexport const SEARCH_ITEMS = \"SEARCH_ITEMS\";\r\n","import { GET_MOVIES_UPCOMING } from \"./types\";\r\n\r\nconst getMoviesUpcoming = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMoviesUpcoming(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMoviesUpcoming = payload => ({\r\n  type: GET_MOVIES_UPCOMING,\r\n  payload\r\n});\r\n\r\nexport default getMoviesUpcoming;\r\n","import { GET_MOVIES_LATEST } from \"./types\";\r\n\r\nconst getMoviesLatest = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMoviesLatest(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMoviesLatest = payload => ({\r\n  type: GET_MOVIES_LATEST,\r\n  payload\r\n});\r\n\r\nexport default getMoviesLatest;\r\n","import { GET_MOVIES_NOW_PLAYING } from \"./types\";\r\n\r\nconst getMoviesNowPlaying = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMoviesNowPlaying(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMoviesNowPlaying = payload => ({\r\n  type: GET_MOVIES_NOW_PLAYING,\r\n  payload\r\n});\r\n\r\nexport default getMoviesNowPlaying;\r\n","import { GET_MOVIES_POPULAR } from \"./types\";\r\n\r\nconst getMoviesPopular = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMoviesPopular(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMoviesPopular = payload => ({\r\n  type: GET_MOVIES_POPULAR,\r\n  payload\r\n});\r\n\r\nexport default getMoviesPopular;\r\n","import { GET_CONFIG } from \"./types.js\";\r\n\r\nexport const getConfig = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passConfig(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passConfig = payload => ({\r\n  type: GET_CONFIG,\r\n  payload\r\n});\r\n\r\nexport default getConfig;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport HomeBanner from \"./HomeBanner\";\r\nimport Movies from \"./Movies\";\r\nimport Footer from \"./Footer\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport getMoviesUpcoming from \"../actions/getMoviesUpcoming\";\r\nimport getMoviesLatest from \"../actions/getMoviesLatest\";\r\nimport getMoviesNowPlaying from \"../actions/getMoviesNowPlaying\";\r\nimport getMoviesPopular from \"../actions/getMoviesPopular\";\r\nimport getConfig from \"../actions/getConfig\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.getMoviesLatest(\r\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&language=en-US`\r\n    );\r\n    this.props.getMoviesUpcoming(\r\n      `https://api.themoviedb.org/3/movie/upcoming?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&language=en-US&page=1`\r\n    );\r\n    this.props.getMoviesNowPlaying(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&language=en-US&page=1`\r\n    );\r\n    this.props.getMoviesPopular(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&language=en-US&page=1`\r\n    );\r\n    this.props.getConfig(\r\n      `https://api.themoviedb.org/3/configuration?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }`\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.moviesNowPlaying.results.length === 0) {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <HomeBanner\r\n            items={this.props.moviesNowPlaying.results}\r\n            config={this.props.config}\r\n          />\r\n          <Movies\r\n            items={this.props.moviesUpcoming.results}\r\n            config={this.props.config}\r\n            header=\"Upcoming\"\r\n          />\r\n          <Movies\r\n            items={this.props.moviesNowPlaying.results}\r\n            config={this.props.config}\r\n            header=\"Now Playing\"\r\n          />\r\n          <Movies\r\n            items={this.props.moviesLatest.results}\r\n            config={this.props.config}\r\n            header=\"Best\"\r\n          />\r\n          <Footer />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  moviesUpcoming: state.getMoviesUpcoming,\r\n  moviesLatest: state.getMoviesLatest,\r\n  moviesNowPlaying: state.getMoviesNowPlaying,\r\n  moviesPopular: state.getMoviesPopular,\r\n  config: state.getConfig\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMoviesUpcoming: url => dispatch(getMoviesUpcoming(url)),\r\n  getMoviesLatest: url => dispatch(getMoviesLatest(url)),\r\n  getMoviesNowPlaying: url => dispatch(getMoviesNowPlaying(url)),\r\n  getMoviesPopular: url => dispatch(getMoviesPopular(url)),\r\n  getConfig: url => dispatch(getConfig(url))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default class Movies extends Component {\r\n  render() {\r\n    const sliderSettings = {\r\n      infinite: true,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      speed: 500,\r\n      autoplaySpeed: 5000,\r\n      responsive: [\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 1\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 1400,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    //fix react-slick 2 trailers bug\r\n    let trailer;\r\n    if (this.props.items[2]) {\r\n      trailer = (\r\n        <Slider {...sliderSettings}>\r\n          {this.props.items.map((item, i) => {\r\n            return (\r\n              <div key={item.key}>\r\n                <iframe\r\n                  title=\"0\"\r\n                  src={`https://www.youtube.com/embed/${item.key}`}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </Slider>\r\n      );\r\n    } else {\r\n      trailer = (\r\n        <div className=\"trailers-single\">\r\n          <iframe\r\n            title=\"0\"\r\n            src={`https://www.youtube.com/embed/${this.props.items[0].key}`}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className=\"trailers\">{trailer}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport avatar from \"../image/avatar.png\";\r\n\r\nexport default class Movies extends Component {\r\n  render() {\r\n    const config = this.props.config;\r\n    const sliderSettings = {\r\n      infinite: true,\r\n      slidesToShow: 5,\r\n      slidesToScroll: 1,\r\n      autoplay: false,\r\n      speed: 500,\r\n      autoplaySpeed: 5000,\r\n      responsive: [\r\n        {\r\n          breakpoint: 500,\r\n          settings: {\r\n            slidesToShow: 1\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 768,\r\n          settings: {\r\n            slidesToShow: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 1178,\r\n          settings: {\r\n            slidesToShow: 3\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 1600,\r\n          settings: {\r\n            slidesToShow: 4\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <div className='cast'>\r\n        {this.props.people.length > 0 ? (\r\n          <Slider {...sliderSettings}>\r\n            {this.props.people.map((person, i) => {\r\n              if (i < 20) {\r\n                return (\r\n                  <div key={person.id}>\r\n                    <div className='cast-link'>\r\n                      <div className='cast-link-person'>\r\n                        <img\r\n                          className='cast-link-person-image'\r\n                          src={\r\n                            person.profile_path && config.images\r\n                              ? `${\r\n                                  config.images\r\n                                    ? config.images.secure_base_url\r\n                                    : \"\"\r\n                                }${\r\n                                  config.images\r\n                                    ? config.images.profile_sizes[1]\r\n                                    : \"\"\r\n                                }${person.profile_path}`\r\n                              : avatar\r\n                          }\r\n                          alt={person.name}\r\n                        />\r\n                        <h3 className='cast-link-person-name'>{person.name}</h3>\r\n                        <p className='cast-link-person-secondary'>as</p>\r\n                        <h3 className='cast-link-person-character'>\r\n                          {person.character}\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n          </Slider>\r\n        ) : (\r\n          \"No cast found...\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Reviews extends Component {\r\n  textCut = (str, length = 75) => {\r\n    const strArray = str.split(\" \");\r\n    return strArray.length < length\r\n      ? str\r\n      : strArray.filter((a, b) => b < length).join(\" \") + \"...\";\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.reviews.map(review => (\r\n          <div\r\n            key={review.url}\r\n            className='movie-details-main-reviews-container'\r\n          >\r\n            <h3 className='movie-details-main-reviews-container-author'>\r\n              {review.author}\r\n            </h3>\r\n            <p className='movie-details-main-reviews-container-content'>\r\n              {this.textCut(review.content)}\r\n            </p>\r\n            <a\r\n              className='movie-details-main-reviews-container-link'\r\n              href={review.url}\r\n              rel='noopener noreferrer'\r\n              target='_blank'\r\n            >\r\n              <p>| Read full review |</p>\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { GET_MOVIE_DETAILS } from \"./types\";\r\n\r\nconst getMovieDetails = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMovieDetails(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMovieDetails = payload => ({\r\n  type: GET_MOVIE_DETAILS,\r\n  payload\r\n});\r\n\r\nexport default getMovieDetails;\r\n","import { GET_MOVIE_TRAILERS } from \"./types\";\r\n\r\nconst getMovieTrailers = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMovieTrailers(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMovieTrailers = payload => ({\r\n  type: GET_MOVIE_TRAILERS,\r\n  payload\r\n});\r\n\r\nexport default getMovieTrailers;\r\n","import { GET_MOVIE_CREDITS } from \"./types\";\r\n\r\nconst getMovieCredits = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMovieCredits(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMovieCredits = payload => ({\r\n  type: GET_MOVIE_CREDITS,\r\n  payload\r\n});\r\n\r\nexport default getMovieCredits;\r\n","import { GET_MOVIE_REVIEWS } from \"./types\";\r\n\r\nconst getMovieReviews = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passMovieReviews(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passMovieReviews = payload => ({\r\n  type: GET_MOVIE_REVIEWS,\r\n  payload\r\n});\r\n\r\nexport default getMovieReviews;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TrailersList from \"./TrailersList\";\r\nimport CastList from \"./CastList\";\r\nimport Reviews from \"./Reviews\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport getMovieDetails from \"../actions/getMovieDetails\";\r\nimport getMovieTrailers from \"../actions/getMovieTrailers\";\r\nimport getMovieCredits from \"../actions/getMovieCredits\";\r\nimport getMovieReviews from \"../actions/getMovieReviews\";\r\n\r\nimport starIcon from \"../image/starIcon.svg\";\r\n\r\nclass MovieDetails extends Component {\r\n  componentDidMount() {\r\n    //scroll to top\r\n    window.scrollTo(0, 0);\r\n\r\n    this.props.getMovieDetails(\r\n      `https://api.themoviedb.org/3/movie/${\r\n        this.props.match.params.id\r\n      }?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n    this.props.getMovieTrailers(\r\n      `https://api.themoviedb.org/3/movie/${\r\n        this.props.match.params.id\r\n      }/videos?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n    this.props.getMovieCredits(\r\n      `https://api.themoviedb.org/3/movie/${\r\n        this.props.match.params.id\r\n      }/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n    this.props.getMovieReviews(\r\n      `https://api.themoviedb.org/3/movie/${\r\n        this.props.match.params.id\r\n      }/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.props.movieTrailers.results.length === 0) {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <div className='movie-details'>\r\n          <div\r\n            className='movie-details-banner'\r\n            style={{\r\n              background: `linear-gradient(\r\n                rgba(0, 0, 0, 0.5),\r\n                rgba(0, 0, 0, 0.5),\r\n                rgba(0, 0, 0, 1)\r\n            ), url(${\r\n              this.props.config.images\r\n                ? this.props.config.images.secure_base_url\r\n                : \"\"\r\n            }${\r\n                this.props.config.images\r\n                  ? this.props.config.images.backdrop_sizes[2]\r\n                  : \"\"\r\n              }${this.props.movieDetails.backdrop_path}) center top no-repeat`,\r\n              backgroundSize: \"cover, cover\"\r\n            }}\r\n          >\r\n            <div className='movie-details-banner-header'>\r\n              <img\r\n                className='movie-details-banner-header-image'\r\n                src={\r\n                  this.props.config.images\r\n                    ? this.props.config.images.secure_base_url +\r\n                      this.props.config.images.poster_sizes[0] +\r\n                      `${\r\n                        this.props.movieDetails\r\n                          ? this.props.movieDetails.poster_path\r\n                          : \"\"\r\n                      }`\r\n                    : \"\"\r\n                }\r\n                alt={\r\n                  this.props.movieDetails ? this.props.movieDetails.title : \"\"\r\n                }\r\n              />\r\n              <div className='movie-details-banner-header-info'>\r\n                <h1 className='movie-details-banner-header-info-title'>\r\n                  {this.props.movieDetails ? this.props.movieDetails.title : \"\"}\r\n                </h1>\r\n                <h3 className='movie-details-banner-header-info-genre'>\r\n                  {this.props.movieDetails.genres\r\n                    ? `${\r\n                        this.props.movieDetails.genres[0]\r\n                          ? this.props.movieDetails.genres[0].name\r\n                          : \"\"\r\n                      }` +\r\n                      `${\r\n                        this.props.movieDetails.genres[1]\r\n                          ? \" | \" + this.props.movieDetails.genres[1].name\r\n                          : \"\"\r\n                      }`\r\n                    : \"\"}\r\n                </h3>\r\n                <h3 className='movie-details-banner-header-info-production'>\r\n                  {this.props.movieDetails.production_countries\r\n                    ? `${\r\n                        this.props.movieDetails.production_countries[0]\r\n                          ? this.props.movieDetails.production_countries[0].name\r\n                          : \"\"\r\n                      }` +\r\n                      `${\r\n                        this.props.movieDetails.production_countries[1]\r\n                          ? \" | \" +\r\n                            this.props.movieDetails.production_countries[1].name\r\n                          : \"\"\r\n                      }`\r\n                    : \"\"}\r\n                </h3>\r\n                <div className='movie-details-banner-header-info-score'>\r\n                  <img\r\n                    className='movie-details-banner-header-info-score-icon'\r\n                    src={starIcon}\r\n                    alt='Rating:'\r\n                  />\r\n                  <div className='movie-details-banner-header-info-score-numbers'>\r\n                    <h3 className='movie-details-banner-header-info-score-numbers-rating'>\r\n                      {this.props.movieDetails.vote_average}/10\r\n                    </h3>\r\n                    <h3 className='movie-details-banner-header-info-score-numbers-votes'>\r\n                      {this.props.movieDetails.vote_count} votes\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='movie-details-main'>\r\n            <div className='movie-details-main-storyline box'>\r\n              <h1 className='movie-details-main-storyline-title header'>\r\n                Storyline\r\n              </h1>\r\n              <p className='movie-details-main-storyline-text'>\r\n                {this.props.movieDetails.overview\r\n                  ? `${\r\n                      this.props.movieDetails.overview.length > 0\r\n                        ? this.props.movieDetails.overview\r\n                        : \"Storyline not found.\"\r\n                    }`\r\n                  : \"\"}\r\n              </p>\r\n            </div>\r\n            <div className='movie-details-main-trailers box'>\r\n              <h1 className='movie-details-main-trailers-header header'>\r\n                Trailers\r\n              </h1>\r\n              {this.props.movieTrailers.results.length > 0 ? (\r\n                <TrailersList items={this.props.movieTrailers.results} />\r\n              ) : (\r\n                <h3 className='item-details-main-trailers__error'>\r\n                  There are no trailers avaible\r\n                </h3>\r\n              )}\r\n            </div>\r\n\r\n            <div className='movie-details-main-cast box'>\r\n              <h1 className='movie-details-main-cast-header header'>\r\n                Starring\r\n              </h1>\r\n              {this.props.movieTrailers.results.length > 0 ? (\r\n                <CastList\r\n                  backdrop_path={\r\n                    this.props.movieDetails\r\n                      ? this.props.movieDetails.backdrop_path\r\n                      : \"\"\r\n                  }\r\n                  people={\r\n                    this.props.movieCredits.cast\r\n                      ? this.props.movieCredits.cast\r\n                      : \"\"\r\n                  }\r\n                  config={this.props.config}\r\n                />\r\n              ) : (\r\n                <h3 className='item-details-main-trailers-error'>\r\n                  There are no trailers avaible\r\n                </h3>\r\n              )}\r\n            </div>\r\n\r\n            <div className='movie-details-main-reviews box'>\r\n              <h1 className='movie-details-main-cast-header header'>Reviews</h1>\r\n              {this.props.movieReviews.results.length > 0 ? (\r\n                <Reviews\r\n                  reviews={\r\n                    this.props.movieReviews.results\r\n                      ? this.props.movieReviews.results\r\n                      : \"\"\r\n                  }\r\n                />\r\n              ) : (\r\n                <h3 className='item-details-main-trailers__error'>\r\n                  There are no reviews for this movie.\r\n                </h3>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieDetails: state.getMovieDetails,\r\n  movieTrailers: state.getMovieTrailers,\r\n  movieCredits: state.getMovieCredits,\r\n  movieReviews: state.getMovieReviews,\r\n  config: state.getConfig\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMovieDetails: url => dispatch(getMovieDetails(url)),\r\n  getMovieTrailers: url => dispatch(getMovieTrailers(url)),\r\n  getMovieCredits: url => dispatch(getMovieCredits(url)),\r\n  getMovieReviews: url => dispatch(getMovieReviews(url))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MovieDetails);\r\n","import { SEARCH_ITEMS } from \"./types\";\r\n\r\nconst searchItems = url => {\r\n  return dispatch => {\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(data => dispatch(passItems(data)))\r\n      .catch(error => console.log(error));\r\n  };\r\n};\r\n\r\nconst passItems = payload => ({\r\n  type: SEARCH_ITEMS,\r\n  payload\r\n});\r\n\r\nexport default searchItems;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Spinner from \"./Spinner\";\r\n\r\nimport searchItems from \"../actions/searchItems\";\r\n\r\nclass SearchResults extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    page: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.searchItems(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&language=en-US&query=${this.props.match.params.id}&page=${\r\n        this.state.page\r\n      }&include_adult=false`\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // search for other item\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.props.searchItems(\r\n        `https://api.themoviedb.org/3/search/multi?api_key=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&language=en-US&query=${\r\n          this.props.match.params.id\r\n        }&page=1&include_adult=false`\r\n      );\r\n    }\r\n  }\r\n\r\n  //change search results pages\r\n  changePage = pageTransition => {\r\n    let page = this.state.page;\r\n    if (this.state.page === 1 && pageTransition === \"prev\") {\r\n      this.setState({ page: 1 });\r\n    } else if (pageTransition === \"next\") {\r\n      this.setState({ page: this.state.page + 1 });\r\n      page = this.state.page + 1;\r\n    } else if (pageTransition === \"prev\") {\r\n      this.setState({ page: this.state.page - 1 });\r\n      page = this.state.page - 1;\r\n    }\r\n\r\n    this.props.searchItems(\r\n      `https://api.themoviedb.org/3/search/multi?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }&language=en-US&query=${\r\n        this.props.match.params.id\r\n      }&page=${page}&include_adult=false`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.props.searchItemsResults.results.length === 0) {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <section className=\"search-results\">\r\n          <div className=\"search-results-header\">\r\n            <h2 className=\"search-results-title\">\r\n              Search results for {this.props.match.params.id}\r\n            </h2>\r\n            <div className=\"search-results-separator\" />\r\n          </div>\r\n          <div className=\"search-results-container\">\r\n            {this.props.searchItemsResults.results.length > 0\r\n              ? this.props.searchItemsResults.results.map(item => (\r\n                  <Link\r\n                    key={item.id}\r\n                    to={`/movie-details/${item.id}`}\r\n                    className=\"search-results-container-link\"\r\n                  >\r\n                    <div className=\"search-results-container-item\">\r\n                      <img\r\n                        className=\"search-results-container-item-image\"\r\n                        src={\r\n                          this.props.config.images\r\n                            ? this.props.config.images.secure_base_url +\r\n                              this.props.config.images.poster_sizes[6] +\r\n                              item.poster_path\r\n                            : \"\"\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                      <h3 className=\"search-results-container-item-title\">\r\n                        {item.media_type === \"tv\" ? item.name : item.title}\r\n                      </h3>\r\n                    </div>\r\n                  </Link>\r\n                ))\r\n              : null}\r\n          </div>\r\n          <div className=\"search-results-pagination\">\r\n            <button\r\n              className=\"search-results-pagination-button\"\r\n              onClick={() => this.changePage(\"prev\")}\r\n            >\r\n              Previous Page\r\n            </button>\r\n            <button\r\n              className=\"search-results-pagination-button\"\r\n              type=\"submit\"\r\n              onClick={() => this.changePage(\"next\")}\r\n            >\r\n              Next Page\r\n            </button>\r\n          </div>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  searchItemsResults: state.searchItems,\r\n  config: state.getConfig\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchItems: url => dispatch(searchItems(url))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SearchResults);\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../style/main.scss\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport Home from \"./Home\";\r\nimport MovieDetails from \"./MovieDetails\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nimport getConfig from \"../actions/getConfig\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.getConfig(\r\n      `https://api.themoviedb.org/3/configuration?api_key=${\r\n        process.env.REACT_APP_API_KEY\r\n      }`\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div className='App'>\r\n          <Navbar />\r\n          <div className='content'>\r\n            <Route path='/' exact component={Home} />\r\n            <Route path='/movie-details/:id' exact component={MovieDetails} />\r\n            <Route path='/search/:id/' exact component={SearchResults} />\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  config: state.getConfig\r\n});\r\n\r\nconst mapDispatcherToProps = dispatch => ({\r\n  getConfig: url => dispatch(getConfig(url))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatcherToProps\r\n)(App);\r\n","import { GET_MOVIES_UPCOMING } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMoviesUpcoming = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_UPCOMING:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMoviesUpcoming;\r\n","import { GET_MOVIES_LATEST } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMoviesLatest = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_LATEST:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMoviesLatest;\r\n","import { GET_MOVIES_NOW_PLAYING } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMoviesNowPlaying = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_NOW_PLAYING:\r\n      return { ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMoviesNowPlaying;\r\n","import { GET_MOVIE_DETAILS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMovieDetails = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE_DETAILS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMovieDetails;\r\n","import { GET_MOVIES_NOW_PLAYING } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMoviesNowPlaying = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIES_NOW_PLAYING:\r\n      return { ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMoviesNowPlaying;\r\n","import { GET_MOVIE_TRAILERS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMovieTrailers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE_TRAILERS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMovieTrailers;\r\n","import { GET_MOVIE_CREDITS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMovieCredits = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE_CREDITS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMovieCredits;\r\n","import { GET_MOVIE_REVIEWS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst getMovieReviews = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_MOVIE_REVIEWS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getMovieReviews;\r\n","import { GET_CONFIG } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nconst getConfig = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CONFIG:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default getConfig;\r\n","import { SEARCH_ITEMS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  results: []\r\n};\r\n\r\nconst searchItems = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_ITEMS:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchItems;\r\n","import { combineReducers } from \"redux\";\r\nimport getMoviesUpcoming from \"./getMoviesUpcoming\";\r\nimport getMoviesLatest from \"./getMoviesLatest\";\r\nimport getMoviesNowPlaying from \"./getMoviesNowPlaying\";\r\nimport getMovieDetails from \"./getMovieDetails\";\r\nimport getMoviesPopular from \"./getMoviesPopular\";\r\nimport getMovieTrailers from \"./getMovieTrailers\";\r\nimport getMovieCredits from \"./getMovieCredits\";\r\nimport getMovieReviews from \"./getMovieReviews\";\r\nimport getConfig from \"./getConfig\";\r\nimport searchItems from \"./searchItems\";\r\n\r\nexport default combineReducers({\r\n  getMoviesUpcoming,\r\n  getMoviesLatest,\r\n  getMoviesNowPlaying,\r\n  getMoviesPopular,\r\n  getMovieDetails,\r\n  getMovieTrailers,\r\n  getMovieCredits,\r\n  getMovieReviews,\r\n  searchItems,\r\n  getConfig\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\nimport store from \"./store\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}